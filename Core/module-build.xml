<?xml version="1.0"?>

<!--
  NOTE: This module build script expects the property "coreHome" to be set and pointing - either absolutely or 
  relatively - to the directory of your core project. In Eclipse this can be done by going to 
  Window -> Preferences -> Any -> Runtime -> Properties and adding a the coreHome property.
 -->
<project name="MA - Module build" basedir=".">
    <property file="module.properties" />
	<property name="fullName" value="m2m2-${name}-${version}" />
    <property file="${coreHome}/module-common.properties" />
	<property name="deploy.jar.paths" value="${coreHome}/target/web/modules" />
	
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${coreHome}/lib-opt/ant-contrib-1.0b3.jar" />

	<path id="master-classpath">
	     <!-- <pathelement path="${coreHome}/bin" /> Removed for use outside of eclipse -->
	    <fileset dir="${coreHome}/target/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="external-lib">
			<include name="*.jar" />
		</fileset>
		<pathelement path="target" />
	</path>

	<target name="clean" description="Clean the target area">
	    <echo message="${coreHome}"/>
	    <delete dir="target" />
		<delete dir="${coreHome}/target/web/modules/${name}"/>
	</target>

	<target name="compile" description="Compile main source tree java files">
		<mkdir dir="target"/>
        
        <available property="lib.exists" file="lib" type="dir" />
        <if>
            <isset property="lib.exists"/>
            <then></then>
            <else>
                <mkdir dir="lib"/>
            </else>
        </if>
		
		<available property="external-lib.exists" file="external-lib" type="dir" />
		        <if>
		            <isset property="external-lib.exists"/>
		            <then></then>
		            <else>
		                <mkdir dir="external-lib"/>
		            </else>
		        </if>
		
		<javac destdir="target" target="1.6" source="1.6" debug="true" debuglevel="lines,vars,source" 
                deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
			<src path="src" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="jar" depends="clean,compile" description="Create a jar file of the compiled classes">
		<delete file="${fullName}.jar" />
		<delete file="target/MANIFEST.MF" />
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>

		<manifest file="target/MANIFEST.MF">
			<attribute name="Built-By" value="Infinite Automation" />
			<attribute name="Build-Date" value="${TODAY}" />
			<attribute name="Build-Version" value="${version}"/>
		</manifest>

        <mkdir dir="target/lib" />
		<jar destfile="target/lib/${fullName}.jar" manifest="target/MANIFEST.MF">
			<fileset dir="target">
				<include name="**/*.class" />
				<exclude name="MANIFEST.MF" />
			</fileset>
		</jar>
		
		<if>
			<istrue value="${includeSource}"/>
			<then>
		        <copy todir="target/src" preservelastmodified="true">
		            <fileset dir="src"><include name="**/*.*"/></fileset>
		        </copy>
			</then>
		</if>
        
        <available property="scripts.exists" file="scripts" type="dir" />
        <if>
            <isset property="scripts.exists"/>
            <then>
                <copy todir="target/bin" preservelastmodified="true">
                    <fileset dir="scripts"><include name="**/*"/></fileset>
                </copy>
            </then>
        </if>
    </target>
    
    <target name="jsp-compile" depends="jar" description="Conditionally compile the JSPs">
        <taskdef name="jetty-jspc" classname="com.serotonin.ant.JettyJspCompile"><classpath refid="master-classpath" /></taskdef>
        <available property="web.exists" file="web" type="dir" />
        <if>
            <isset property="web.exists"/>
            <then>
                <available property="work.exists" file="${coreHome}/target/work/jsp" type="dir" />
                <if>
                    <isset property="work.exists"/>
                    <then>
                        <antcall target="|jsp-compile"/>
                    </then>
                    <else>
                        <fail message="Run the core jsp-compile target first"/>
                    </else>
                </if>
            </then>
        </if>
    </target>
    
    <target name="|jsp-compile" description="Compile the JSPs">
        <property name="module.core" value="${coreHome}/target/web/modules/${name}" />
        
        <!-- Copy the web files to core dirs -->
        <delete dir="${module.core}"/>
        <copy todir="${module.core}/web" preservelastmodified="true">
            <fileset dir="web">
                <include name="**/*.jsp"/>
                <include name="**/*.jspf"/>
                <include name="**/*.tag"/>
                <include name="**/*.tagf"/>
                <include name="**/*.tld"/>
            </fileset>
        </copy>
        
        <!-- Check if there is a tags lib -->
        <if>
            <isset property="tagdir"/>
            <then>
                <!-- Move the tag dir to under the WEB-INF dir -->
                <move todir="${coreHome}/target/web/WEB-INF/tags/${name}">
                    <fileset dir="${module.core}/${tagdir}"/>
                </move>
            </then>
        </if>
        
        <!-- Get the list of files to compile -->
        <fileset id="jsps.fs" dir="${coreHome}/target/web" includes="modules/${name}/**/*"/>
        <property name="canonical" location="${coreHome}/target/web"/>
        <pathconvert property="jsps" pathsep="," refid="jsps.fs" setonempty="false">
            <map from="${canonical}" to="."/>
        </pathconvert>
    	
        <!-- Compile the JSPs IF THERE ARE ANY-->
        <if>
        	<isset property="jsps"/>
        		<then>
        			<delete dir="${coreHome}/target/work/jsp/org/apache/jsp/modules/${name}"/>
        			<echo message="Compiling JSPs"/>
                	<jetty-jspc uriroot="${coreHome}/target/web" outputDir="${coreHome}/target/work/jsp"
                            compile="true" compilerSourceVM="1.5" compilerTargetVM="1.5" jspFiles="${jsps}">
                        <classpath>
                            <path refid="master-classpath"/>
                            <pathelement path="target/lib/${fullName}.jar"/>
                        </classpath>
                    </jetty-jspc>
        		</then>
            </if>
    	
        <!-- Copy the compiled stuff back to the module -->
        <property name="pkg" value="target/work/jsp/org/apache/jsp/modules/${name}"/>
        <available property="pkg.exists" file="${coreHome}/${pkg}" type="dir" />
        <if>
            <isset property="pkg.exists"/>
            <then>
            	<echo message="Copying Compiled JSPs Back Into Module" />
                <copy todir="${pkg}" preservelastmodified="true">
                    <fileset dir="${coreHome}/${pkg}"><include name="**/*"/></fileset>
                </copy>
            </then>
        	<else>
        		<echo message="No JSP Files Compiled For this Module!"/>
        	</else>
        </if>
        
        <if>
            <isset property="tagdir"/>
            <then>
                <!-- Copy the compiled tag dir back to the module -->
                <property name="tagpkg" value="target/work/jsp/org/apache/jsp/tag/web/${name}"/>
                <echo message="${tagpkg}"/>
                <copy todir="${tagpkg}" preservelastmodified="true">
                    <fileset dir="${coreHome}/${tagpkg}"><include name="**/*"/></fileset>
                </copy>
            </then>
        </if>
    </target>
    
    <target name="zip" depends="jsp-compile" description="Create a jar file of the compiled classes">
        <delete file="target/${fullName}.zip" />
        <zip destfile="target/${fullName}.zip">
            <fileset dir="">
                <include name="module.properties" />
                <include name="RELEASE-NOTES" />
                <include name="licenseTypes.xml" />
            </fileset>
            <fileset dir="target/"><include name="lib/${fullName}.jar" /></fileset>
            <fileset dir=""><include name="lib/**/*.jar" /></fileset>
            <fileset dir=""><include name="lib/**/*.so" /></fileset>
            <fileset dir=""><include name="dox/**/*" /></fileset>
            <fileset dir=""><include name="web/**/*" /></fileset>
            <fileset dir=""><include name="classes/**/*" /></fileset>
            <fileset dir="target"><include name="work/**/*" /></fileset>
            <fileset dir="target" ><include name="src/**/*" /></fileset>
            <fileset dir="target" ><include name="bin/**/*" /></fileset>
        </zip>
    </target>
    
    <target name="deploy" depends="zip" description="Copy the zip to configured places">
        <foreach list="${deploy.jar.paths}" target="|deploy" param="todir" delimiter="|">
            <param name="deploy.file" value="target/${fullName}.zip" />
        </foreach>
<!--         <copy todir="${coreHome}/web/modules" preservelastmodified="true"> -->
<!--             <fileset file="target/${fullName}.zip"/> -->
<!--         </copy> -->
    </target>
    <target name="|deploy">
        <copy todir="${todir}" preservelastmodified="true" file="${deploy.file}" />
    </target>
    
    <target name="copy-web" description="Copy the web dir to the core - useful when developing">
        <copy todir="${coreHome}/target/web/modules/${name}/web" preservelastmodified="true">
            <fileset dir="web"><include name="**/*"/></fileset>
        </copy>
    </target>
</project>
